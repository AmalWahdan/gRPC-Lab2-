{"ast":null,"code":"// source: src/app/protos/orderDetails.proto\n/**\n * @fileoverview\n * @enhanceable\n * @suppress {missingRequire} reports error on implicit type usages.\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n/* eslint-disable */\n// @ts-nocheck\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global = function () {\n  return this || window || global || self || Function('return this')();\n}.call(null);\ngoog.exportSymbol('proto.OrderRequest', null, global);\ngoog.exportSymbol('proto.OrderResponse', null, global);\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.OrderRequest = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.OrderRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.OrderRequest.displayName = 'proto.OrderRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.OrderResponse = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.OrderResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.OrderResponse.displayName = 'proto.OrderResponse';\n}\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.OrderRequest.prototype.toObject = function (opt_includeInstance) {\n    return proto.OrderRequest.toObject(opt_includeInstance, this);\n  };\n\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.OrderRequest} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n  proto.OrderRequest.toObject = function (includeInstance, msg) {\n    var f,\n      obj = {\n        userid: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n        productid: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n        quantity: jspb.Message.getFieldWithDefault(msg, 3, 0),\n        amount: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0)\n      };\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.OrderRequest}\n */\nproto.OrderRequest.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.OrderRequest();\n  return proto.OrderRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.OrderRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.OrderRequest}\n */\nproto.OrderRequest.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n      case 1:\n        var value = /** @type {string} */reader.readString();\n        msg.setUserid(value);\n        break;\n      case 2:\n        var value = /** @type {string} */reader.readString();\n        msg.setProductid(value);\n        break;\n      case 3:\n        var value = /** @type {number} */reader.readInt32();\n        msg.setQuantity(value);\n        break;\n      case 4:\n        var value = /** @type {number} */reader.readDouble();\n        msg.setAmount(value);\n        break;\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n  return msg;\n};\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.OrderRequest.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.OrderRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.OrderRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.OrderRequest.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getUserid();\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n  f = message.getProductid();\n  if (f.length > 0) {\n    writer.writeString(2, f);\n  }\n  f = message.getQuantity();\n  if (f !== 0) {\n    writer.writeInt32(3, f);\n  }\n  f = message.getAmount();\n  if (f !== 0.0) {\n    writer.writeDouble(4, f);\n  }\n};\n\n/**\n * optional string UserId = 1;\n * @return {string}\n */\nproto.OrderRequest.prototype.getUserid = function () {\n  return (/** @type {string} */jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n\n/**\n * @param {string} value\n * @return {!proto.OrderRequest} returns this\n */\nproto.OrderRequest.prototype.setUserid = function (value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n/**\n * optional string ProductId = 2;\n * @return {string}\n */\nproto.OrderRequest.prototype.getProductid = function () {\n  return (/** @type {string} */jspb.Message.getFieldWithDefault(this, 2, \"\")\n  );\n};\n\n/**\n * @param {string} value\n * @return {!proto.OrderRequest} returns this\n */\nproto.OrderRequest.prototype.setProductid = function (value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n/**\n * optional int32 Quantity = 3;\n * @return {number}\n */\nproto.OrderRequest.prototype.getQuantity = function () {\n  return (/** @type {number} */jspb.Message.getFieldWithDefault(this, 3, 0)\n  );\n};\n\n/**\n * @param {number} value\n * @return {!proto.OrderRequest} returns this\n */\nproto.OrderRequest.prototype.setQuantity = function (value) {\n  return jspb.Message.setProto3IntField(this, 3, value);\n};\n\n/**\n * optional double amount = 4;\n * @return {number}\n */\nproto.OrderRequest.prototype.getAmount = function () {\n  return (/** @type {number} */jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0)\n  );\n};\n\n/**\n * @param {number} value\n * @return {!proto.OrderRequest} returns this\n */\nproto.OrderRequest.prototype.setAmount = function (value) {\n  return jspb.Message.setProto3FloatField(this, 4, value);\n};\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.OrderResponse.prototype.toObject = function (opt_includeInstance) {\n    return proto.OrderResponse.toObject(opt_includeInstance, this);\n  };\n\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.OrderResponse} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n  proto.OrderResponse.toObject = function (includeInstance, msg) {\n    var f,\n      obj = {\n        done: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),\n        message: jspb.Message.getFieldWithDefault(msg, 2, \"\")\n      };\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n    return obj;\n  };\n}\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.OrderResponse}\n */\nproto.OrderResponse.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.OrderResponse();\n  return proto.OrderResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.OrderResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.OrderResponse}\n */\nproto.OrderResponse.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n      case 1:\n        var value = /** @type {boolean} */reader.readBool();\n        msg.setDone(value);\n        break;\n      case 2:\n        var value = /** @type {string} */reader.readString();\n        msg.setMessage(value);\n        break;\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n  return msg;\n};\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.OrderResponse.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.OrderResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.OrderResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.OrderResponse.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getDone();\n  if (f) {\n    writer.writeBool(1, f);\n  }\n  f = message.getMessage();\n  if (f.length > 0) {\n    writer.writeString(2, f);\n  }\n};\n\n/**\n * optional bool Done = 1;\n * @return {boolean}\n */\nproto.OrderResponse.prototype.getDone = function () {\n  return (/** @type {boolean} */jspb.Message.getBooleanFieldWithDefault(this, 1, false)\n  );\n};\n\n/**\n * @param {boolean} value\n * @return {!proto.OrderResponse} returns this\n */\nproto.OrderResponse.prototype.setDone = function (value) {\n  return jspb.Message.setProto3BooleanField(this, 1, value);\n};\n\n/**\n * optional string Message = 2;\n * @return {string}\n */\nproto.OrderResponse.prototype.getMessage = function () {\n  return (/** @type {string} */jspb.Message.getFieldWithDefault(this, 2, \"\")\n  );\n};\n\n/**\n * @param {string} value\n * @return {!proto.OrderResponse} returns this\n */\nproto.OrderResponse.prototype.setMessage = function (value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\ngoog.object.extend(exports, proto);","map":{"version":3,"names":["jspb","require","goog","global","window","self","Function","call","exportSymbol","proto","OrderRequest","opt_data","Message","initialize","inherits","DEBUG","COMPILED","displayName","OrderResponse","GENERATE_TO_OBJECT","prototype","toObject","opt_includeInstance","includeInstance","msg","f","obj","userid","getFieldWithDefault","productid","quantity","amount","getFloatingPointFieldWithDefault","$jspbMessageInstance","deserializeBinary","bytes","reader","BinaryReader","deserializeBinaryFromReader","nextField","isEndGroup","field","getFieldNumber","value","readString","setUserid","setProductid","readInt32","setQuantity","readDouble","setAmount","skipField","serializeBinary","writer","BinaryWriter","serializeBinaryToWriter","getResultBuffer","message","undefined","getUserid","length","writeString","getProductid","getQuantity","writeInt32","getAmount","writeDouble","setProto3StringField","setProto3IntField","setProto3FloatField","done","getBooleanFieldWithDefault","readBool","setDone","setMessage","getDone","writeBool","getMessage","setProto3BooleanField","object","extend","exports"],"sources":["E:/9M/gRPC/ITIMenofia.Grpc/FrontEnd/src/app/generated/src/app/protos/orderDetails_pb.js"],"sourcesContent":["// source: src/app/protos/orderDetails.proto\n/**\n * @fileoverview\n * @enhanceable\n * @suppress {missingRequire} reports error on implicit type usages.\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n/* eslint-disable */\n// @ts-nocheck\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global = (function() { return this || window || global || self || Function('return this')(); }).call(null);\n\ngoog.exportSymbol('proto.OrderRequest', null, global);\ngoog.exportSymbol('proto.OrderResponse', null, global);\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.OrderRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.OrderRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.OrderRequest.displayName = 'proto.OrderRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.OrderResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.OrderResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.OrderResponse.displayName = 'proto.OrderResponse';\n}\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.OrderRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.OrderRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.OrderRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.OrderRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    userid: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    productid: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    quantity: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    amount: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.OrderRequest}\n */\nproto.OrderRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.OrderRequest;\n  return proto.OrderRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.OrderRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.OrderRequest}\n */\nproto.OrderRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setUserid(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProductid(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setQuantity(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readDouble());\n      msg.setAmount(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.OrderRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.OrderRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.OrderRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.OrderRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getUserid();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getProductid();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getQuantity();\n  if (f !== 0) {\n    writer.writeInt32(\n      3,\n      f\n    );\n  }\n  f = message.getAmount();\n  if (f !== 0.0) {\n    writer.writeDouble(\n      4,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string UserId = 1;\n * @return {string}\n */\nproto.OrderRequest.prototype.getUserid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.OrderRequest} returns this\n */\nproto.OrderRequest.prototype.setUserid = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional string ProductId = 2;\n * @return {string}\n */\nproto.OrderRequest.prototype.getProductid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.OrderRequest} returns this\n */\nproto.OrderRequest.prototype.setProductid = function(value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * optional int32 Quantity = 3;\n * @return {number}\n */\nproto.OrderRequest.prototype.getQuantity = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.OrderRequest} returns this\n */\nproto.OrderRequest.prototype.setQuantity = function(value) {\n  return jspb.Message.setProto3IntField(this, 3, value);\n};\n\n\n/**\n * optional double amount = 4;\n * @return {number}\n */\nproto.OrderRequest.prototype.getAmount = function() {\n  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.OrderRequest} returns this\n */\nproto.OrderRequest.prototype.setAmount = function(value) {\n  return jspb.Message.setProto3FloatField(this, 4, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.OrderResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.OrderResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.OrderResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.OrderResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    done: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),\n    message: jspb.Message.getFieldWithDefault(msg, 2, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.OrderResponse}\n */\nproto.OrderResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.OrderResponse;\n  return proto.OrderResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.OrderResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.OrderResponse}\n */\nproto.OrderResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setDone(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setMessage(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.OrderResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.OrderResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.OrderResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.OrderResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getDone();\n  if (f) {\n    writer.writeBool(\n      1,\n      f\n    );\n  }\n  f = message.getMessage();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bool Done = 1;\n * @return {boolean}\n */\nproto.OrderResponse.prototype.getDone = function() {\n  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));\n};\n\n\n/**\n * @param {boolean} value\n * @return {!proto.OrderResponse} returns this\n */\nproto.OrderResponse.prototype.setDone = function(value) {\n  return jspb.Message.setProto3BooleanField(this, 1, value);\n};\n\n\n/**\n * optional string Message = 2;\n * @return {string}\n */\nproto.OrderResponse.prototype.getMessage = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.OrderResponse} returns this\n */\nproto.OrderResponse.prototype.setMessage = function(value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\ngoog.object.extend(exports, proto);\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}